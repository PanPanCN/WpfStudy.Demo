<?xml version="1.0"?>
<doc>
    <assembly>
        <name>PanPanMvvm.Toolkit.Wpf</name>
    </assembly>
    <members>
        <member name="T:PanPanMvvm.Toolkit.Wpf.Command.RelayCommand`1">
            <inheritdoc />
            <summary>
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="E:PanPanMvvm.Toolkit.Wpf.Command.RelayCommand`1.CanExecuteChanged">
            <inheritdoc />
            <summary>
            检查命令是否可以执行的事件，在UI事件发生导致控件状态或数据发生变化时触发
            </summary>
        </member>
        <member name="F:PanPanMvvm.Toolkit.Wpf.Command.RelayCommand`1._canExecute">
            <summary>
            判断命令是否可以执行的方法
            </summary>
        </member>
        <member name="F:PanPanMvvm.Toolkit.Wpf.Command.RelayCommand`1._execute">
            <summary>
            命令需要执行的方法
            </summary>
        </member>
        <member name="M:PanPanMvvm.Toolkit.Wpf.Command.RelayCommand`1.#ctor(System.Action{`0})">
            <inheritdoc />
            <summary>
            创建一个命令
            </summary>
            <param name="execute">命令要执行的方法</param>
        </member>
        <member name="M:PanPanMvvm.Toolkit.Wpf.Command.RelayCommand`1.#ctor(System.Action{`0},System.Func{`0,System.Boolean})">
            <summary>
            创建一个命令
            </summary>
            <param name="execute">命令要执行的方法</param>
            <param name="canExecute">判断命令是否能够执行的方法</param>
        </member>
        <member name="M:PanPanMvvm.Toolkit.Wpf.Command.RelayCommand`1.CanExecute(System.Object)">
            <inheritdoc />
            <summary>
            判断命令是否可以执行
            </summary>
            <param name="parameter">命令传入的参数</param>
            <returns>是否可以执行</returns>
        </member>
        <member name="M:PanPanMvvm.Toolkit.Wpf.Command.RelayCommand`1.Execute(System.Object)">
            <inheritdoc />
            <summary>
            执行命令
            </summary>
            <param name="parameter">命令传入的参数</param>
        </member>
        <member name="T:PanPanMvvm.Toolkit.Wpf.Command.RelayCommand">
            <inheritdoc />
            <summary>
            </summary>
        </member>
        <member name="E:PanPanMvvm.Toolkit.Wpf.Command.RelayCommand.CanExecuteChanged">
            <inheritdoc />
            <summary>
            检查命令是否可以执行的事件，在UI事件发生导致控件状态或数据发生变化时触发
            </summary>
        </member>
        <member name="F:PanPanMvvm.Toolkit.Wpf.Command.RelayCommand._canExecute">
            <summary>
            判断命令是否可以执行的方法
            </summary>
        </member>
        <member name="F:PanPanMvvm.Toolkit.Wpf.Command.RelayCommand._execute">
            <summary>
            命令需要执行的方法
            </summary>
        </member>
        <member name="M:PanPanMvvm.Toolkit.Wpf.Command.RelayCommand.#ctor(System.Action{System.Object})">
            <inheritdoc />
            <summary>
            创建一个命令
            </summary>
            <param name="execute">命令要执行的方法</param>
        </member>
        <member name="M:PanPanMvvm.Toolkit.Wpf.Command.RelayCommand.#ctor(System.Action{System.Object},System.Func{System.Object,System.Boolean})">
            <summary>
            创建一个命令
            </summary>
            <param name="execute">命令要执行的方法</param>
            <param name="canExecute">判断命令是否能够执行的方法</param>
        </member>
        <member name="M:PanPanMvvm.Toolkit.Wpf.Command.RelayCommand.CanExecute(System.Object)">
            <inheritdoc />
            <summary>
            判断命令是否可以执行
            </summary>
            <param name="parameter">命令传入的参数</param>
            <returns>是否可以执行</returns>
        </member>
        <member name="M:PanPanMvvm.Toolkit.Wpf.Command.RelayCommand.Execute(System.Object)">
            <inheritdoc />
            <summary>
            执行命令
            </summary>
            <param name="parameter"></param>
        </member>
        <member name="T:PanPanMvvm.Toolkit.Wpf.ObservableObject">
            <inheritdoc cref="T:System.Windows.DependencyObject" />
            <summary>
            通知对象
            </summary>
        </member>
        <member name="E:PanPanMvvm.Toolkit.Wpf.ObservableObject.PropertyChanged">
            <inheritdoc />
            <summary>
            属性改变事件
            </summary>
        </member>
        <member name="M:PanPanMvvm.Toolkit.Wpf.ObservableObject.GetPropertyName``1(System.Linq.Expressions.Expression{System.Func{``0}})">
            <summary>
            获取属性名称
            </summary>
            <typeparam name="T">类型</typeparam>
            <param name="propertyExpression">属性表达式</param>
            <returns></returns>
        </member>
        <member name="M:PanPanMvvm.Toolkit.Wpf.ObservableObject.RaisePropertyChanged(System.String)">
            <summary>
            通知属性
            </summary>
            <param name="propertyName">属性名称</param>
        </member>
        <member name="M:PanPanMvvm.Toolkit.Wpf.ObservableObject.RaisePropertyChanged``1(System.Linq.Expressions.Expression{System.Func{``0}})">
            <summary>
            通知属性
            </summary>
            <typeparam name="T">类型</typeparam>
            <param name="propertyExpression">属性名称</param>
        </member>
        <member name="M:PanPanMvvm.Toolkit.Wpf.ObservableObject.Set``1(System.Linq.Expressions.Expression{System.Func{``0}},``0@,``0)">
            <summary>
            设置属性值
            </summary>
            <typeparam name="T">类型</typeparam>
            <param name="propertyExpression">属性表达式</param>
            <param name="field">字段</param>
            <param name="newValue">新值</param>
            <returns>返回是否设置成功</returns>
        </member>
        <member name="M:PanPanMvvm.Toolkit.Wpf.ObservableObject.Set``1(``0@,``0,System.String)">
            <summary>
            设置属性值
            </summary>
            <typeparam name="T">类型</typeparam>
            <param name="field">字段</param>
            <param name="newValue">新值</param>
            <param name="propertyName">属性名称</param>
            <returns>返回是否设置成功</returns>
        </member>
        <member name="M:PanPanMvvm.Toolkit.Wpf.ObservableObject.Set``1(System.String,``0@,``0)">
            <summary>
            设置属性值
            </summary>
            <typeparam name="T">类型</typeparam>
            <param name="propertyName">属性名称</param>
            <param name="field">字段</param>
            <param name="newValue">新值</param>
            <returns>返回是否设置成功</returns>
        </member>
        <member name="T:System.Runtime.CompilerServices.CallerMemberNameAttribute">
            <inheritdoc />
            <summary>
            调用方名称
            </summary>
        </member>
        <member name="T:System.Runtime.CompilerServices.CallerFilePathAttribute">
            <inheritdoc />
            <summary>
            代码文件路径
            </summary>
        </member>
        <member name="T:System.Runtime.CompilerServices.CallerLineNumberAttribute">
            <inheritdoc />
            <summary>
            代码行数
            </summary>
        </member>
    </members>
</doc>
